<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <parent>
          <artifactId>springcloud</artifactId>
          <groupId>com.sqt</groupId>
          <version>0.0.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>

     <artifactId>springcloud-eureka01</artifactId>

     <dependencies>
          <dependency>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-starter-web</artifactId>
          </dependency>
          <!--eureka-server服务端 -->
          <dependency>
               <groupId>org.springframework.cloud</groupId>
               <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
          </dependency>
          <!-- 修改后立即生效，热部署 -->
         <dependency>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-devtools</artifactId>
          </dependency>

          <!--可以引入日志 @Slf4j注解-->
          <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
          <dependency>
               <groupId>org.projectlombok</groupId>
               <artifactId>lombok</artifactId>
               <version>1.16.22</version>
               <scope>provided</scope>
          </dependency>

          <!-- <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka</artifactId>
                <version>1.3.1.RELEASE</version>
           </dependency>-->
          <!-- 修改后立即生效，热部署 -->
      <!--    <dependency>
               <groupId>org.springframework</groupId>
               <artifactId>springloaded</artifactId>
          </dependency>-->
          <!--<dependency>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-devtools</artifactId>
          </dependency>
          <dependency>
               <groupId>org.springframework.cloud</groupId>
               <artifactId>spring-cloud-starter-gateway</artifactId>
          </dependency>
          <dependency>
               <groupId>org.springframework.cloud</groupId>
               <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
          </dependency>

          <dependency>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-devtools</artifactId>
               <scope>runtime</scope>
          </dependency>
          <dependency>
               <groupId>org.postgresql</groupId>
               <artifactId>postgresql</artifactId>
               <scope>runtime</scope>
          </dependency>
          <dependency>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-starter-test</artifactId>
               <scope>test</scope>
          </dependency>-->
     </dependencies>
     <build>
          <plugins>
               <!--解决SpringBoot打包成jar后运行提示没有主清单属性-->
               <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                         <execution>
                              <goals>
                                   <goal>repackage</goal>
                              </goals>
                         </execution>
                    </executions>
               </plugin>
               <!-- docker打包 -->
               <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                         <imageName>example</imageName>
                         <baseImage>java</baseImage>
                         <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                         <!-- copy the service's jar file from target into the root directory of the image -->
                         <!-- 镜像名称  -->
                         <imageName>dockerdemo</imageName>
                         <!-- docker远程服务器地址 -->
                         <dockerHost>http://192.168.1.74:2375</dockerHost>
                         <!-- Dockerfile文件存放目录 -->
                         <dockerDirectory>src/docker</dockerDirectory>
                         <resources>
                              <resource>
                                   <targetPath>/</targetPath>
                                   <directory>${project.build.directory}</directory>
                                   <include>${project.build.finalName}.jar</include>
                              </resource>
                         </resources>
                    </configuration>
               </plugin>
          </plugins>
     </build>
</project>